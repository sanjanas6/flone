{"version":3,"file":"static/js/670.e71dc0f9.chunk.js","mappings":"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","sources":["components/seo.jsx","components/swiper/index.jsx","components/section-title/SectionTitleWithText.js","components/text-grid/TextGridOneSingle.js","wrappers/text-grid/TextGridOne.js","pages/other/About.js","wrappers/breadcrumb/Breadcrumb.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\r\n\r\nconst SEO = ({ title, titleTemplate, description }) => {\r\n    return (\r\n        <HelmetProvider>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>\r\n                    {title} | {titleTemplate}\r\n                </title>\r\n                <meta name=\"description\" content={description} />\r\n            </Helmet>\r\n        </HelmetProvider>\r\n    );\r\n};\r\nSEO.propTypes = {\r\n    title: PropTypes.string,\r\n    titleTemplate: PropTypes.string,\r\n    description: PropTypes.string,\r\n}\r\nSEO.defaultProps = {\r\n    title: \"Fascinatingly Dark\",\r\n    titleTemplate: \"Product Page\",\r\n    description: \"Product page of Fascinatingly Dark react minimalist eCommerce template.\",\r\n};\r\nexport default SEO;","import React, { forwardRef } from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport cn from \"clsx\";\r\nimport { Navigation, Pagination, Autoplay, A11y } from \"swiper\";\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\nconst SwiperSlider = forwardRef(\r\n    (\r\n        {\r\n            options,\r\n            prevIcon,\r\n            nextIcon,\r\n            children,\r\n            className,\r\n            navClass,\r\n        },\r\n        ref\r\n    ) => {\r\n        const modules = options?.modules !== undefined ? options.modules : [];\r\n        const prevClass = `prev-${navClass || \"swiper-nav\"}`;\r\n        const nextClass = `next-${navClass || \"swiper-nav\"}`;\r\n        const sliderOptions = {\r\n            slidesPerView: 1,\r\n            spaceBetween: 0,\r\n            loop: false,\r\n            autoplay: options?.autoplay ? {\r\n                delay: 2500,\r\n                disableOnInteraction: false,\r\n            } : false,\r\n            watchSlidesProgress: true,\r\n            autoHeight: true,\r\n            breakpoints: {},\r\n            ...options,\r\n            modules: [Navigation, Pagination, A11y, Autoplay, ...modules],\r\n            navigation: options?.navigation\r\n                ? {\r\n                      prevEl: `.${prevClass}`,\r\n                      nextEl: `.${nextClass}`,\r\n                  }\r\n                : false,\r\n            pagination: options?.pagination\r\n                ? {\r\n                      clickable: true,\r\n                  }\r\n                : false,\r\n        };\r\n\r\n        return (\r\n            <div\r\n                className={cn(\"swiper-wrap\", className)}\r\n                ref={ref}\r\n            >\r\n                <Swiper {...sliderOptions}>{children}</Swiper>\r\n\r\n                {sliderOptions?.navigation && (\r\n                    <>\r\n                        <button\r\n                            type=\"button\"\r\n                            className={`swiper-button-prev ht-swiper-button-nav ${prevClass}`}\r\n                        >\r\n                            <i className={cn(prevIcon, \"icon\")} />\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className={`swiper-button-next ht-swiper-button-nav ${nextClass}`}\r\n                        >\r\n                            <i className={cn(nextIcon, \"icon\")} />\r\n                        </button>\r\n                    </>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n);\r\n\r\nexport { SwiperSlide };\r\n\r\nSwiperSlider.propTypes = {\r\n    options: PropTypes.shape({}),\r\n    prevIcon: PropTypes.string,\r\n    nextIcon: PropTypes.string,\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    navClass: PropTypes.string,\r\n}\r\n\r\nSwiperSlider.defaultProps = {\r\n    prevIcon: \"pe-7s-angle-left\",\r\n    nextIcon: \"pe-7s-angle-right\",\r\n    navStyle: 1,\r\n    dotStyle: 1,\r\n};\r\n\r\nexport default SwiperSlider;","import PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\n\r\nconst SectionTitleWithText = ({ spaceTopClass, spaceBottomClass }) => {\r\n  return (\r\n    <div className={clsx(\"welcome-area\", spaceTopClass, spaceBottomClass)}>\r\n      <div className=\"container\">\r\n        <div className=\"welcome-content text-center\">\r\n          <h5>Who Are We</h5>\r\n          <h1>Welcome To Fascinatingly Dark</h1>\r\n          <p>\r\n            Fascinatingly dark was founded with the intent to create beauty solutions that are safe, honest and effective.\r\n\r\n            We pair the best aspects of ancient methodology with learning from contemporary knowledge, to offer beauty solutions that work on multiple levels.\r\n            All products are organic,chemical free and vegan(add signs).\r\n            <br />\r\n            <strong> A Humbel Start - </strong>My aunt was diagnosed with severe eye infection because of Kajal of a well known brand and this motivated us to make kajal with ayurvedic method.\r\n            Then we diversified and added lipcare ranges too and still we are working to introduce new products.{\" \"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSectionTitleWithText.propTypes = {\r\n  spaceBottomClass: PropTypes.string,\r\n  spaceTopClass: PropTypes.string\r\n};\r\n\r\nexport default SectionTitleWithText;\r\n","import PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\n\r\nconst TextGridOneSingle = ({ data, spaceBottomClass }) => {\r\n  return (\r\n      <div className={clsx(\"single-mission\", spaceBottomClass)}>\r\n        <h3>{data.title}</h3>\r\n        <p>{data.text}</p>\r\n      </div>\r\n  );\r\n};\r\n\r\nTextGridOneSingle.propTypes = {\r\n  data: PropTypes.shape({}),\r\n  spaceBottomClass: PropTypes.string\r\n};\r\n\r\nexport default TextGridOneSingle;\r\n","import PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport textGridData from \"../../data/text-grid/text-grid-one.json\";\r\nimport TextGridOneSingle from \"../../components/text-grid/TextGridOneSingle.js\";\r\n\r\nconst TextGridOne = ({ spaceBottomClass }) => {\r\n  return (\r\n    <div className={clsx(\"about-mission-area\", spaceBottomClass)}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {textGridData?.map((single, key) => (\r\n              <div className=\"col-lg-4 col-md-4\" key={key}>\r\n                <TextGridOneSingle\r\n                  data={single}\r\n                  spaceBottomClass=\"mb-30\"\r\n                />\r\n              </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextGridOne.propTypes = {\r\n  spaceBottomClass: PropTypes.string\r\n};\r\n\r\nexport default TextGridOne;\r\n","import { Fragment } from \"react\"; \r\nimport { useLocation } from \"react-router-dom\"; \r\nimport SEO from \"../../components/seo\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport SectionTitleWithText from \"../../components/section-title/SectionTitleWithText\";\r\nimport BannerOne from \"../../wrappers/banner/BannerOne\";\r\nimport TextGridOne from \"../../wrappers/text-grid/TextGridOne\";\r\nimport TeamMemberOne from \"../../wrappers/team-member/TeamMemberOne\";\r\nimport BrandLogoSliderOne from \"../../wrappers/brand-logo/BrandLogoSliderOne\";\r\n\r\nconst About = () => {\r\n  let { pathname } = useLocation();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"About us\"\r\n        description=\"About page of Fascinatingly Dark react minimalist eCommerce template.\"\r\n      /> \r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        {/* <Breadcrumb \r\n          pages={[\r\n            {label: \"Home\", path:  \"/\" },\r\n            {label: \"About us\", path:  pathname }\r\n          ]} \r\n        /> */}\r\n\r\n        {/* section title with text */}\r\n        <SectionTitleWithText spaceTopClass=\"pt-100\" spaceBottomClass=\"pb-95\" />\r\n\r\n        {/* banner */}\r\n        {/* <BannerOne spaceBottomClass=\"pb-70\" /> */}\r\n\r\n        {/* text grid */}\r\n        <TextGridOne spaceBottomClass=\"pb-70\" />\r\n\r\n        {/* team member */}\r\n        {/* <TeamMemberOne spaceTopClass=\"pt-95\" spaceBottomClass=\"pb-70\" /> */}\r\n\r\n        {/* brand logo slider */}\r\n        {/* <BrandLogoSliderOne spaceBottomClass=\"pb-70\" /> */}\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import PropTypes from \"prop-types\";\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BreadcrumbWrap = ({pages}) => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-35 pb-35 bg-gray-3\">\r\n      <div className=\"container\">\r\n        <Breadcrumb>\r\n            {pages?.map(({ path, label }, i) => i !== pages.length - 1 ? (\r\n                <Breadcrumb.Item key={label} linkProps={{to: path}} linkAs={Link}>\r\n                  {label}\r\n                </Breadcrumb.Item>\r\n            ) : (                \r\n              <Breadcrumb.Item key={label} active>\r\n                {label}\r\n              </Breadcrumb.Item>\r\n            ))}\r\n        </Breadcrumb>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBreadcrumbWrap.propTypes = {\r\n  pages: PropTypes.arrayOf(PropTypes.shape({\r\n    label: PropTypes.string.isRequired,\r\n    path: PropTypes.string.isRequired\r\n  })).isRequired\r\n}\r\n\r\nexport default BreadcrumbWrap;\r\n"],"names":["SEO","_ref","title","titleTemplate","description","_jsx","HelmetProvider","children","_jsxs","Helmet","charSet","name","content","defaultProps","SwiperSlider","forwardRef","ref","options","prevIcon","nextIcon","className","navClass","modules","undefined","prevClass","concat","nextClass","sliderOptions","_objectSpread","slidesPerView","spaceBetween","loop","autoplay","delay","disableOnInteraction","watchSlidesProgress","autoHeight","breakpoints","Navigation","Pagination","A11y","Autoplay","_toConsumableArray","navigation","prevEl","nextEl","pagination","clickable","cn","Swiper","_Fragment","type","navStyle","dotStyle","spaceTopClass","spaceBottomClass","clsx","data","text","textGridData","map","single","key","TextGridOneSingle","useLocation","pathname","Fragment","LayoutOne","headerTop","SectionTitleWithText","TextGridOne","pages","Breadcrumb","_ref2","i","path","label","length","Item","linkProps","to","linkAs","Link","active"],"sourceRoot":""}