{"version":3,"file":"static/js/191.ff40f38e.chunk.js","mappings":"gKAGMA,EAAM,SAAHC,GAA+C,IAAzCC,EAAKD,EAALC,MAAOC,EAAaF,EAAbE,cAAeC,EAAWH,EAAXG,YACjC,OACIC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,CAAAC,UACXC,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CAAAF,SAAA,EACHF,EAAAA,EAAAA,KAAA,QAAMK,QAAQ,WACdF,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CACKL,EAAM,MAAIC,MAEfE,EAAAA,EAAAA,KAAA,QAAMM,KAAK,cAAcC,QAASR,QAIlD,EAMAJ,EAAIa,aAAe,CACfX,MAAO,qBACPC,cAAe,eACfC,YAAa,2EAEjB,K,oGCiCA,UArDiB,WACf,IAAMU,GAAaC,EAAAA,EAAAA,MAAbD,SAEN,OACEN,EAAAA,EAAAA,MAACQ,EAAAA,SAAQ,CAAAT,SAAA,EACPF,EAAAA,EAAAA,KAACL,EAAAA,EAAG,CACFG,cAAc,YACdC,YAAY,oEAEdI,EAAAA,EAAAA,MAACS,EAAAA,EAAS,CAACC,UAAU,UAASX,SAAA,EAE5BF,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CACTC,MAAO,CACL,CAACC,MAAO,OAAQC,KAAO,KACvB,CAACD,MAAO,WAAYC,KAAOR,OAG/BT,EAAAA,EAAAA,KAAA,OAAKkB,UAAU,0BAAyBhB,UACtCF,EAAAA,EAAAA,KAAA,OAAKkB,UAAU,YAAWhB,UACxBF,EAAAA,EAAAA,KAAA,OAAKkB,UAAU,6BAA4BhB,UACzCF,EAAAA,EAAAA,KAAA,OAAKkB,UAAU,gCAA+BhB,UAC5CC,EAAAA,EAAAA,MAAA,OAAKe,UAAU,QAAOhB,SAAA,EACpBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,SACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,0BACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,2HAIHC,EAAAA,EAAAA,MAAA,QAAMe,UAAU,mBAAkBhB,SAAA,EAChCF,EAAAA,EAAAA,KAAA,SACEmB,KAAK,OACLb,KAAK,SACLc,GAAG,eACHC,YAAY,YACZH,UAAU,uBAEZlB,EAAAA,EAAAA,KAAA,UAAQmB,KAAK,SAASD,UAAU,qBAAoBhB,UAClDF,EAAAA,EAAAA,KAAA,KAAGkB,UAAU,uBAGjBlB,EAAAA,EAAAA,KAACsB,EAAAA,GAAI,CAACC,GAAK,IAAKL,UAAU,YAAWhB,SAAC,sCAWxD,C,uDC1BA,IA3BuB,SAAHN,GAAiB,IAAZmB,EAAKnB,EAALmB,MACvB,OACEf,EAAAA,EAAAA,KAAA,OAAKkB,UAAU,wCAAuChB,UACpDF,EAAAA,EAAAA,KAAA,OAAKkB,UAAU,YAAWhB,UACxBF,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAAAZ,SACD,OAALa,QAAK,IAALA,OAAK,EAALA,EAAOS,KAAI,SAAAC,EAAkBC,GAAC,IAAhBT,EAAIQ,EAAJR,KAAMD,EAAKS,EAALT,MAAK,OAAUU,IAAMX,EAAMY,OAAS,GACrD3B,EAAAA,EAAAA,KAACc,EAAAA,EAAWc,KAAI,CAAaC,UAAW,CAACN,GAAIN,GAAOa,OAAQR,EAAAA,GAAKpB,SAC9Dc,GADmBA,IAIxBhB,EAAAA,EAAAA,KAACc,EAAAA,EAAWc,KAAI,CAAaG,QAAM,EAAA7B,SAChCc,GADmBA,EAGvB,SAKb,C","sources":["components/seo.jsx","pages/other/NotFound.js","wrappers/breadcrumb/Breadcrumb.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\r\n\r\nconst SEO = ({ title, titleTemplate, description }) => {\r\n    return (\r\n        <HelmetProvider>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>\r\n                    {title} | {titleTemplate}\r\n                </title>\r\n                <meta name=\"description\" content={description} />\r\n            </Helmet>\r\n        </HelmetProvider>\r\n    );\r\n};\r\nSEO.propTypes = {\r\n    title: PropTypes.string,\r\n    titleTemplate: PropTypes.string,\r\n    description: PropTypes.string,\r\n}\r\nSEO.defaultProps = {\r\n    title: \"Fascinatingly Dark\",\r\n    titleTemplate: \"Product Page\",\r\n    description: \"Product page of Fascinatingly Dark react minimalist eCommerce template.\",\r\n};\r\nexport default SEO;","import { Fragment } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\"; \r\nimport SEO from \"../../components/seo\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\n\r\nconst NotFound = () => {\r\n  let { pathname } = useLocation();\r\n\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"Not Found\"\r\n        description=\"404 of Fascinatingly Dark react minimalist eCommerce template.\"\r\n      />\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb \r\n          pages={[\r\n            {label: \"Home\", path:  \"/\" },\r\n            {label: \"404 page\", path:  pathname }\r\n          ]} \r\n        />\r\n        <div className=\"error-area pt-40 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-xl-7 col-lg-8 text-center\">\r\n                <div className=\"error\">\r\n                  <h1>404</h1>\r\n                  <h2>OPPS! PAGE NOT FOUND</h2>\r\n                  <p>\r\n                    Sorry but the page you are looking for does not exist, have\r\n                    been removed, name changed or is temporarity unavailable.\r\n                  </p>\r\n                  <form className=\"searchform mb-50\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"search\"\r\n                      id=\"error_search\"\r\n                      placeholder=\"Search...\"\r\n                      className=\"searchform__input\"\r\n                    />\r\n                    <button type=\"submit\" className=\"searchform__submit\">\r\n                      <i className=\"fa fa-search\" />\r\n                    </button>\r\n                  </form>\r\n                  <Link to={ \"/\"} className=\"error-btn\">\r\n                    Back to home page\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import PropTypes from \"prop-types\";\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BreadcrumbWrap = ({pages}) => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-35 pb-35 bg-gray-3\">\r\n      <div className=\"container\">\r\n        <Breadcrumb>\r\n            {pages?.map(({ path, label }, i) => i !== pages.length - 1 ? (\r\n                <Breadcrumb.Item key={label} linkProps={{to: path}} linkAs={Link}>\r\n                  {label}\r\n                </Breadcrumb.Item>\r\n            ) : (                \r\n              <Breadcrumb.Item key={label} active>\r\n                {label}\r\n              </Breadcrumb.Item>\r\n            ))}\r\n        </Breadcrumb>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBreadcrumbWrap.propTypes = {\r\n  pages: PropTypes.arrayOf(PropTypes.shape({\r\n    label: PropTypes.string.isRequired,\r\n    path: PropTypes.string.isRequired\r\n  })).isRequired\r\n}\r\n\r\nexport default BreadcrumbWrap;\r\n"],"names":["SEO","_ref","title","titleTemplate","description","_jsx","HelmetProvider","children","_jsxs","Helmet","charSet","name","content","defaultProps","pathname","useLocation","Fragment","LayoutOne","headerTop","Breadcrumb","pages","label","path","className","type","id","placeholder","Link","to","map","_ref2","i","length","Item","linkProps","linkAs","active"],"sourceRoot":""}