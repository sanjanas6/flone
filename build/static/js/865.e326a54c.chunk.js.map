{"version":3,"file":"static/js/865.e326a54c.chunk.js","mappings":"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","sources":["pages/other/Register.js","wrappers/breadcrumb/Breadcrumb.js"],"sourcesContent":["import React, { Fragment , useState} from \"react\";\r\nimport { Link, useLocation, useNavigate} from \"react-router-dom\"; \r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport axios from \"axios\";\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Register = () => {\r\n  let { pathname } = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); \r\n\r\n    try {\r\n        const response = await axios.post('http://localhost:8080/api/v1/auth/register', {\r\n            email: email,\r\n            phone: phone,\r\n            password: password\r\n        });\r\n\r\n        if (response.data.success) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Registration Successful',\r\n                text: 'User Registered Successfully!',\r\n            });\r\n            navigate(\"/login\")\r\n        } else {\r\n            // Registration failed\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Registration Failed',\r\n                text: response.data.message,\r\n            });\r\n        }\r\n    } catch (error) {\r\n        // Error during registration\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Registration Failed',\r\n            text: 'An error occurred during registration',\r\n        });\r\n\r\n        console.error(\"Registration failed:\", error);\r\n    }\r\n};\r\n\r\n  return (\r\n    <Fragment>\r\n       <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb \r\n          pages={[\r\n            {label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            {label: \"Register\", path: process.env.PUBLIC_URL + pathname }\r\n          ]} \r\n        />\r\n        <div className=\"login-register-area pt-100 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-7 col-md-12 ms-auto me-auto\">\r\n                <div className=\"login-register-wrapper\">\r\n                        <div className=\"login-form-container\">\r\n                          <div className=\"login-register-form\">\r\n                            <form onSubmit={handleSubmit}>\r\n                              <input\r\n                                type=\"number\"\r\n                                name=\"mobile-number\"\r\n                                placeholder=\"Mobile Number\"\r\n                                value={phone}\r\n                                onChange={(e)=>setPhone(e.target.value)}\r\n                              />\r\n                               <input\r\n                                name=\"user-email\"\r\n                                placeholder=\"Email\"\r\n                                type=\"email\"\r\n                                value={email}\r\n                                onChange={(e)=>setEmail(e.target.value)}\r\n                              />\r\n                              <input\r\n                                type=\"password\"\r\n                                name=\"user-password\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                onChange={(e)=>setPassword(e.target.value)}\r\n                              />\r\n                              <div className=\"button-box\">\r\n                                <button type=\"submit\">\r\n                                  <span>Register</span>\r\n                                </button>\r\n                              </div>\r\n                            </form>\r\n                          </div>\r\n                        </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import PropTypes from \"prop-types\";\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BreadcrumbWrap = ({pages}) => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-35 pb-35 bg-gray-3\">\r\n      <div className=\"container\">\r\n        <Breadcrumb>\r\n            {pages?.map(({ path, label }, i) => i !== pages.length - 1 ? (\r\n                <Breadcrumb.Item key={label} linkProps={{to: path}} linkAs={Link}>\r\n                  {label}\r\n                </Breadcrumb.Item>\r\n            ) : (                \r\n              <Breadcrumb.Item key={label} active>\r\n                {label}\r\n              </Breadcrumb.Item>\r\n            ))}\r\n        </Breadcrumb>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBreadcrumbWrap.propTypes = {\r\n  pages: PropTypes.arrayOf(PropTypes.shape({\r\n    label: PropTypes.string.isRequired,\r\n    path: PropTypes.string.isRequired\r\n  })).isRequired\r\n}\r\n\r\nexport default BreadcrumbWrap;\r\n"],"names":["pathname","useLocation","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","phone","setPhone","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","response","wrap","_context","prev","next","preventDefault","axios","post","sent","data","success","Swal","icon","title","text","message","t0","console","error","stop","_x","apply","arguments","_jsx","Fragment","children","_jsxs","LayoutOne","headerTop","Breadcrumb","pages","label","path","process","className","onSubmit","type","name","placeholder","value","onChange","target","map","_ref2","i","length","Item","linkProps","to","linkAs","Link","active"],"sourceRoot":""}